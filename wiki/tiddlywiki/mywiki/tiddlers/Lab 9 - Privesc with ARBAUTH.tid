created: 20220801062422765
modified: 20220805162959463
tags: 
title: Lab 9 - Privesc with ARBAUTH
type: text/vnd.tiddlywiki

[img[Screenshot_2022-07-31_23-34-15.png]]

If you've explored at all on the system you'll know there's a dataset called `WHITE.RABBIT`. Did you try to access it? What happens when you try to read `SCRIPT` in that dataset? If you try to ''E''dit or ''V''iew that dataset you will get access denied! Bummer!

[img[denied.png]]

Despite OPENTST being in a APF authorized library, it wasn't linked with `AC=1` which means it still can't run authorized! 

[img[opentstac0.png]]

Luckily with have a program in `SYS2.LINKLIB` that can help us: ''ARBAUTH''. ARBAUTH lets us provide a program to run and it will run it as AC=1. 

!! Running ARBAUTH

# Open lab 9: `<username>.JCLLIB(LAB09)` and SUBMIT the job
# You should get a max return code of `0000`

!! Running Opentst with ARBAUTH

# Open lab 10: `<username>.JCLLIB(LAB10)` and SUBMIT the job
# Whoa we get an even stranger CC `SYSTEM=53E`, don't worry we can ignore it
# Look at the job log and see that our WTOR shell code ran just fine!

[img[arbauthwto.png]]

!! Prep for Privesc

No we're going to use ARBAUTH and the overflow in OPENTST to change our permissions and follow the WHITE.RABBIT

# Submit the job `<username>.JCLLIB(LAB11)` this generates shell code to change a users ACEE Flag 1 to `10110001`.
# Using FTP download the file `<username>.LOAD(ACEEJOB)`.
# Open the both DEBRUJIN and ACEEJOB with okteta: `okteta DEBRUJIN & okteta ACEEJOB`
# Copy all bytes between `CAFEBABE` from ACEEJOB and paste them start at the first byte in `DEBRUJIN`.
# Save this file as `PRIVESC`
# Using FTP upload this file as ⚠️⚠️binary⚠️⚠️ to `<username>.OVERFLOW.ARBAUTH(PRIVESC)`
#* `cd <username>.OVERFLOW.ARBAUTH`
#* `bin`
#* `PUT PRIVESC`

!! Exploit

# Open the file `<username>.JCLLIB(LAB12)` in ISPF editor. 
#* Notice there's two steps, the ARBAUTH step `//ARBAUTH   EXEC PGM=ARBAUTH, ` and the read step `//STEP01 EXEC PGM=IEBGENER,COND=EVEN`. 
#** Step 1: PRIVESC [img[privesc.png]]
#** Step 2: Read the file we shouldn't [img[whiterabbit.png]]
#* If you look at the JCL for `STEP01` you'll see `//SYSUT1   DD DSN=WHITE.RABBIT(SCRIPT),DISP=SHR`. 
#* This is the file that IEBGENER is going to read and output to the joblog.
# Submit this job, it will also abend
# Look at the job log, you should see `WRITING COMPLETE`. This means we successfully changed our ACEE!
# Scroll down and notice you now have the contents of `WHITE.RABBIT(SCRIPT)` available to you!

[img[Screenshot_2022-08-01_00-06-05.png]]
