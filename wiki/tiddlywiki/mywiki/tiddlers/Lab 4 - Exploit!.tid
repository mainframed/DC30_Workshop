created: 20220731185926293
modified: 20220805065919404
tags: 
title: Lab 4 - Exploit!
type: text/vnd.tiddlywiki

Now that we know where in our buffer we can control the return, we can now overflow the buffer and control execution.

# Edit `<username>.OVERFLOW(WTO400)` Scroll to the right with `F11` and see now that the `@@@@` have been replaced with something (around `Columns 257 328`). 
#* Turn on the hex editor with `HEX ON` so see what it is. 
#* This address should be similar to the memory location we noted down in Lab 2. 
#* ''Bonus question'': Why isn't it the same as the location that LGBT starts in memory from Lab 2?
# Edit `<username>.JCLLIB(LAB04)`.   and submit the job. It should end with `MAX COND CODE 0000`
# View the job output (type `=3.8` on the command bar and `ST <username>` to show only your jobs. 
#* Notice in the job log we see ` +H4CK3D TH3 M41NFR4M3`. This is a Write To Operator (WTO) message that we executed with our overflow!


If you want to see what we changed, download both `<username>.OVERFLOW(LOC400)` and `<username>.OVERFLOW(WTO400)` with FTP in binary mode (FTP is listening on port 2121) and use the linux command `vbindiff` to compare them. Vbindiff can show EBCDIC by pressing `C`

[img[Screenshot_2022-07-31_12-05-20.png]]